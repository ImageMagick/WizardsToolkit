# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#  Copyright 1999-2021 ImageMagick Studio LLC, a non-profit organization
#  dedicated to making software imaging solutions freely available.
#
#  You may not use this file except in compliance with the License.  You may
#  obtain a copy of the License at
#
#    http://www.wizards-toolkit.org/script/license.php
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  Top-Level Makefile for building the Wizard's Toolkit.

#  Copyright 1999-2017 ImageMagick Studio LLC, a non-profit organization
#  dedicated to making software imaging solutions freely available.
#
#  You may not use this file except in compliance with the License.  You may
#  obtain a copy of the License at
#
#    http://www.imagemagick.org/script/license.php
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  Makefile for building ImageMagick m4 macros.

#  Copyright 1999-2021 ImageMagick Studio LLC, a non-profit organization
#  dedicated to making software imaging solutions freely available.
#
#  You may not use this file except in compliance with the License.  You may
#  obtain a copy of the License at
#
#    http://www.wizards-toolkit.org/script/license.php
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  Makefile for the Wizard's Toolkit configuration files.

#  Copyright 1999-2021 ImageMagick Studio LLC, a non-profit organization
#  dedicated to making software imaging solutions freely available.
#
#  You may not use this file except in compliance with the License.
#  obtain a copy of the License at
#
#    http://www.wizards-toolkit.org/script/license.php
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  Makefile for building Wizard's Toolkit library.

# Copyright 1999-2021 ImageMagick Studio LLC, a non-profit organization
# dedicated to making software imaging solutions freely available.
#
# You may not use this file except in compliance with the License.
# obtain a copy of the License at
#
#   http://www.wizards-toolkit.org/script/license.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#  Makefile for Wizard's Toolkit tests invoked via the C API.

#  Copyright 1999-2021 ImageMagick Studio LLC, a non-profit organization
#  dedicated to making software imaging solutions freely available.
#
#  You may not use this file except in compliance with the License.  You may
#  obtain a copy of the License at
#
#    http://www.wizards-toolkit.org/script/license.php
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  Makefile for building Wizard's Toolkit utilities.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/WizardsToolkit
pkgincludedir = $(includedir)/WizardsToolkit
pkglibdir = $(libdir)/WizardsToolkit
pkglibexecdir = $(libexecdir)/WizardsToolkit
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1)
XFAIL_TESTS = $(am__EXEEXT_3)
check_PROGRAMS = $(am__EXEEXT_2)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_func_fseeko.m4 \
	$(top_srcdir)/m4/ax_c___attribute__.m4 \
	$(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_cxx_bool.m4 \
	$(top_srcdir)/m4/ax_cxx_namespace_std.m4 \
	$(top_srcdir)/m4/ax_cxx_namespaces.m4 \
	$(top_srcdir)/m4/ax_gcc_archflag.m4 \
	$(top_srcdir)/m4/ax_gcc_x86_cpuid.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/m4/ax_prepend_flag.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/ld-version-script.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/wizard_func_mmap_fileio.m4 \
	$(top_srcdir)/m4/version.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(include_HEADERS) $(noinst_HEADERS) \
	$(wizardinc_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES = common.shi config/configure.xml \
	config/WizardsToolkit.dox wizard.sh utilities/cipher-info.1 \
	utilities/decipher.1 utilities/digest.1 utilities/encipher.1 \
	utilities/keyring.1 windows/WizardsToolkit.bat \
	wizard/version.h wizard/WizardsToolkit-config \
	wizard/WizardsToolkit.pc WizardsToolkit.spec
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = utilities/encipher$(EXEEXT) utilities/decipher$(EXEEXT) \
	utilities/cipher-info$(EXEEXT) utilities/keyring$(EXEEXT) \
	utilities/digest$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(configlibdir)" "$(DESTDIR)$(configsharedir)" \
	"$(DESTDIR)$(configsharearchdir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(wizardincdir)"
am__EXEEXT_2 = tests/validate$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
wizard_libWizardsToolkit_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__wizard_libWizardsToolkit_la_SOURCES_DIST = wizard/aes.c \
	wizard/aes.h wizard/authenticate.c wizard/authenticate.h \
	wizard/blob.c wizard/blob.h wizard/blob-private.h \
	wizard/bzip.c wizard/bzip.h wizard/chacha.c wizard/chacha.h \
	wizard/cipher.c wizard/cipher.h wizard/client.c \
	wizard/client.h wizard/configure.c wizard/configure.h \
	wizard/hashmap.h wizard/crc64.c wizard/crc64.h \
	wizard/entropy.c wizard/entropy.h wizard/exception.c \
	wizard/exception.h wizard/exception-private.h wizard/file.c \
	wizard/file.h wizard/hash.c wizard/hash.h wizard/hashmap.c \
	wizard/hmac.c wizard/hmac.h wizard/key.c wizard/key.h \
	wizard/keyring.c wizard/keyring.h wizard/locale.c \
	wizard/locale_.h wizard/log.c wizard/log.h wizard/lzma.c \
	wizard/lzma.h wizard/magick.c wizard/magick.h wizard/md5.c \
	wizard/md5.h wizard/memory.c wizard/memory_.h \
	wizard/memory-private.h wizard/method-attribute.h \
	wizard/mime.c wizard/mime.h wizard/mime-private.h \
	wizard/nt-base.h wizard/option.c wizard/option.h \
	wizard/passphrase.c wizard/passphrase.h wizard/random.c \
	wizard/random_.h wizard/resource.c wizard/resource_.h \
	wizard/sanitize.c wizard/sanitize.h wizard/secret.c \
	wizard/secret.h wizard/semaphore.c wizard/semaphore.h \
	wizard/semaphore-private.h wizard/serpent.c wizard/serpent.h \
	wizard/signature.c wizard/signature.h wizard/sha1.c \
	wizard/sha1.h wizard/sha2224.c wizard/sha2224.h \
	wizard/sha2256.c wizard/sha2256.h wizard/sha2384.c \
	wizard/sha2384.h wizard/sha2512.c wizard/sha2512.h \
	wizard/sha3.c wizard/sha3.h wizard/splay-tree.c \
	wizard/splay-tree.h wizard/string.c wizard/string_.h \
	wizard/string-private.h wizard/studio.h wizard/thread.c \
	wizard/thread_.h wizard/thread-private.h wizard/timer.c \
	wizard/timer.h wizard/token.c wizard/token.h wizard/twofish.c \
	wizard/twofish.h wizard/utility.c wizard/utility.h \
	wizard/utility-private.h wizard/version.c wizard/version.h \
	wizard/wizard.c wizard/wizard.h wizard/wizard-type.h \
	wizard/wizard-config.h wizard/WizardsToolkit.h \
	wizard/xml-tree.c wizard/xml-tree.h wizard/xml-tree-private.h \
	wizard/zip.c wizard/zip.h wizard/nt-base.c
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = wizard/aes.lo wizard/authenticate.lo wizard/blob.lo \
	wizard/bzip.lo wizard/chacha.lo wizard/cipher.lo \
	wizard/client.lo wizard/configure.lo wizard/crc64.lo \
	wizard/entropy.lo wizard/exception.lo wizard/file.lo \
	wizard/hash.lo wizard/hashmap.lo wizard/hmac.lo wizard/key.lo \
	wizard/keyring.lo wizard/locale.lo wizard/log.lo \
	wizard/lzma.lo wizard/magick.lo wizard/md5.lo wizard/memory.lo \
	wizard/mime.lo wizard/option.lo wizard/passphrase.lo \
	wizard/random.lo wizard/resource.lo wizard/sanitize.lo \
	wizard/secret.lo wizard/semaphore.lo wizard/serpent.lo \
	wizard/signature.lo wizard/sha1.lo wizard/sha2224.lo \
	wizard/sha2256.lo wizard/sha2384.lo wizard/sha2512.lo \
	wizard/sha3.lo wizard/splay-tree.lo wizard/string.lo \
	wizard/thread.lo wizard/timer.lo wizard/token.lo \
	wizard/twofish.lo wizard/utility.lo wizard/version.lo \
	wizard/wizard.lo wizard/xml-tree.lo wizard/zip.lo
#am__objects_2 = wizard/nt-base.lo
am_wizard_libWizardsToolkit_la_OBJECTS = $(am__objects_1) \
	$(am__objects_2)
wizard_libWizardsToolkit_la_OBJECTS =  \
	$(am_wizard_libWizardsToolkit_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
wizard_libWizardsToolkit_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(wizard_libWizardsToolkit_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tests_validate_OBJECTS = tests/validate-validate.$(OBJEXT)
tests_validate_OBJECTS = $(am_tests_validate_OBJECTS)
tests_validate_DEPENDENCIES = $(WIZARD_LIBS)
am_utilities_cipher_info_OBJECTS = utilities/cipher-info.$(OBJEXT) \
	utilities/content.$(OBJEXT) utilities/utility.$(OBJEXT)
utilities_cipher_info_OBJECTS = $(am_utilities_cipher_info_OBJECTS)
utilities_cipher_info_DEPENDENCIES = $(WIZARD_LIBS)
utilities_cipher_info_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(utilities_cipher_info_LDFLAGS) \
	$(LDFLAGS) -o $@
am_utilities_decipher_OBJECTS = utilities/decipher.$(OBJEXT) \
	utilities/content.$(OBJEXT) utilities/utility.$(OBJEXT)
utilities_decipher_OBJECTS = $(am_utilities_decipher_OBJECTS)
utilities_decipher_DEPENDENCIES = $(WIZARD_LIBS)
utilities_decipher_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(utilities_decipher_LDFLAGS) \
	$(LDFLAGS) -o $@
am_utilities_digest_OBJECTS = utilities/digest.$(OBJEXT) \
	utilities/content.$(OBJEXT) utilities/utility.$(OBJEXT)
utilities_digest_OBJECTS = $(am_utilities_digest_OBJECTS)
utilities_digest_DEPENDENCIES = $(WIZARD_LIBS)
utilities_digest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(utilities_digest_LDFLAGS) $(LDFLAGS) \
	-o $@
am_utilities_encipher_OBJECTS = utilities/encipher.$(OBJEXT) \
	utilities/content.$(OBJEXT) utilities/utility.$(OBJEXT)
utilities_encipher_OBJECTS = $(am_utilities_encipher_OBJECTS)
utilities_encipher_DEPENDENCIES = $(WIZARD_LIBS)
utilities_encipher_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(utilities_encipher_LDFLAGS) \
	$(LDFLAGS) -o $@
am_utilities_keyring_OBJECTS = utilities/keyring.$(OBJEXT) \
	utilities/content.$(OBJEXT) utilities/utility.$(OBJEXT)
utilities_keyring_OBJECTS = $(am_utilities_keyring_OBJECTS)
utilities_keyring_DEPENDENCIES = $(WIZARD_LIBS)
utilities_keyring_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(utilities_keyring_LDFLAGS) $(LDFLAGS) \
	-o $@
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = tests/$(DEPDIR)/validate-validate.Po \
	utilities/$(DEPDIR)/cipher-info.Po \
	utilities/$(DEPDIR)/content.Po utilities/$(DEPDIR)/decipher.Po \
	utilities/$(DEPDIR)/digest.Po utilities/$(DEPDIR)/encipher.Po \
	utilities/$(DEPDIR)/keyring.Po utilities/$(DEPDIR)/utility.Po \
	wizard/$(DEPDIR)/aes.Plo wizard/$(DEPDIR)/authenticate.Plo \
	wizard/$(DEPDIR)/blob.Plo wizard/$(DEPDIR)/bzip.Plo \
	wizard/$(DEPDIR)/chacha.Plo wizard/$(DEPDIR)/cipher.Plo \
	wizard/$(DEPDIR)/client.Plo wizard/$(DEPDIR)/configure.Plo \
	wizard/$(DEPDIR)/crc64.Plo wizard/$(DEPDIR)/entropy.Plo \
	wizard/$(DEPDIR)/exception.Plo wizard/$(DEPDIR)/file.Plo \
	wizard/$(DEPDIR)/hash.Plo wizard/$(DEPDIR)/hashmap.Plo \
	wizard/$(DEPDIR)/hmac.Plo wizard/$(DEPDIR)/key.Plo \
	wizard/$(DEPDIR)/keyring.Plo wizard/$(DEPDIR)/locale.Plo \
	wizard/$(DEPDIR)/log.Plo wizard/$(DEPDIR)/lzma.Plo \
	wizard/$(DEPDIR)/magick.Plo wizard/$(DEPDIR)/md5.Plo \
	wizard/$(DEPDIR)/memory.Plo wizard/$(DEPDIR)/mime.Plo \
	wizard/$(DEPDIR)/nt-base.Plo wizard/$(DEPDIR)/option.Plo \
	wizard/$(DEPDIR)/passphrase.Plo wizard/$(DEPDIR)/random.Plo \
	wizard/$(DEPDIR)/resource.Plo wizard/$(DEPDIR)/sanitize.Plo \
	wizard/$(DEPDIR)/secret.Plo wizard/$(DEPDIR)/semaphore.Plo \
	wizard/$(DEPDIR)/serpent.Plo wizard/$(DEPDIR)/sha1.Plo \
	wizard/$(DEPDIR)/sha2224.Plo wizard/$(DEPDIR)/sha2256.Plo \
	wizard/$(DEPDIR)/sha2384.Plo wizard/$(DEPDIR)/sha2512.Plo \
	wizard/$(DEPDIR)/sha3.Plo wizard/$(DEPDIR)/signature.Plo \
	wizard/$(DEPDIR)/splay-tree.Plo wizard/$(DEPDIR)/string.Plo \
	wizard/$(DEPDIR)/thread.Plo wizard/$(DEPDIR)/timer.Plo \
	wizard/$(DEPDIR)/token.Plo wizard/$(DEPDIR)/twofish.Plo \
	wizard/$(DEPDIR)/utility.Plo wizard/$(DEPDIR)/version.Plo \
	wizard/$(DEPDIR)/wizard.Plo wizard/$(DEPDIR)/xml-tree.Plo \
	wizard/$(DEPDIR)/zip.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(wizard_libWizardsToolkit_la_SOURCES) \
	$(tests_validate_SOURCES) $(utilities_cipher_info_SOURCES) \
	$(utilities_decipher_SOURCES) $(utilities_digest_SOURCES) \
	$(utilities_encipher_SOURCES) $(utilities_keyring_SOURCES)
DIST_SOURCES = $(am__wizard_libWizardsToolkit_la_SOURCES_DIST) \
	$(tests_validate_SOURCES) $(utilities_cipher_info_SOURCES) \
	$(utilities_decipher_SOURCES) $(utilities_digest_SOURCES) \
	$(utilities_encipher_SOURCES) $(utilities_keyring_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
DATA = $(configlib_DATA) $(configshare_DATA) $(configsharearch_DATA) \
	$(doc_DATA) $(pkgconfig_DATA)
HEADERS = $(include_HEADERS) $(noinst_HEADERS) $(wizardinc_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
am__EXEEXT_3 =
TEST_SUITE_LOG = test-suite.log
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
am__test_logs3 = $(am__test_logs2:.sh.log=.log)
SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
TEST_LOGS = $(am__test_logs3:.tap.log=.log)
TAP_LOG_COMPILE = $(TAP_LOG_COMPILER) $(AM_TAP_LOG_FLAGS) \
	$(TAP_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/WizardsToolkit.spec.in $(srcdir)/common.shi.in \
	$(srcdir)/config/Makefile.am $(srcdir)/m4/Makefile.am \
	$(srcdir)/tests/Makefile.am $(srcdir)/utilities/Makefile.am \
	$(srcdir)/wizard.sh.in $(srcdir)/wizard/Makefile.am \
	$(top_srcdir)/config/WizardsToolkit.dox.in \
	$(top_srcdir)/config/compile $(top_srcdir)/config/config.guess \
	$(top_srcdir)/config/config.h.in \
	$(top_srcdir)/config/config.sub \
	$(top_srcdir)/config/configure.xml.in \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/install-sh \
	$(top_srcdir)/config/ltmain.sh $(top_srcdir)/config/missing \
	$(top_srcdir)/config/mkinstalldirs \
	$(top_srcdir)/config/tap-driver.sh \
	$(top_srcdir)/config/test-driver \
	$(top_srcdir)/utilities/cipher-info.1.in \
	$(top_srcdir)/utilities/decipher.1.in \
	$(top_srcdir)/utilities/digest.1.in \
	$(top_srcdir)/utilities/encipher.1.in \
	$(top_srcdir)/utilities/keyring.1.in \
	$(top_srcdir)/windows/WizardsToolkit.bat.in \
	$(top_srcdir)/wizard/WizardsToolkit-config.in \
	$(top_srcdir)/wizard/WizardsToolkit.pc.in \
	$(top_srcdir)/wizard/version.h.in ChangeLog.md config/compile \
	config/config.guess config/config.sub config/depcomp \
	config/install-sh config/ltmain.sh config/missing \
	config/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2 $(distdir).tar.lz \
	$(distdir).tar.xz $(distdir).zip
GZIP_ENV = --best
DIST_TARGETS = dist-lzip dist-xz dist-bzip2 dist-gzip dist-zip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} '/home/cristy/WizardsToolkit-1.0.9/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} '/home/cristy/WizardsToolkit-1.0.9/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/cristy/WizardsToolkit-1.0.9/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/cristy/WizardsToolkit-1.0.9/config/missing' automake-1.16
AWK = gawk
BIN_DIR = /usr/local/bin
BZLIB_LIBS = -lbz2
CC = gcc
CCDEPMODE = depmode=none
CCMALLOCDelegate = 
CFLAGS =  -fopenmp -Wall -g -O2 -mtune=core2 -pthread -pthread
CONFIGURE_ARGS = ./configure  '--disable-dependency-tracking'
CONFIGURE_DEPENDENCIES =  $(top_srcdir)/ChangeLog.md $(top_srcdir)/m4/version.m4
CONFIGURE_PATH = /usr/local/etc/WizardsToolkit-1
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CVS_BRANCH_TAG = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS =  -pthread -pthread
CYGPATH_W = echo
DATA_DIR = /usr/local/share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRSEP = :
DISTCHECK_CONFIG_FLAGS =  --with-jemalloc=no  --with-umem=no 
DLLTOOL = false
DOCUMENTATION_PATH = /usr/local/share/doc/WizardsToolkit-1
DOC_DIR = /usr/local/share/doc/WizardsToolkit
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXECUTABLE_PATH = /usr/local/bin
EXEC_PREFIX_DIR = /usr/local
EXEEXT = 
FGREP = /usr/bin/grep -F
FILECMD = file
GDI32_LIBS = 
GOMP_LIBS = -lgomp
GREP = /usr/bin/grep
INCLUDEARCH_DIR = /usr/local/include
INCLUDEARCH_PATH = /usr/local/include/WizardsToolkit-1
INCLUDE_DIR = /usr/local/include
INCLUDE_PATH = /usr/local/include/WizardsToolkit-1
INFO_DIR = /usr/local/share/info
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INT16_T = signed short
INT32_F = ""
INT32_T = signed int
INT64_F = "l"
INT64_T = signed long
INT8_T = signed char
JEMALLOC_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LFS_CPPFLAGS =  -D_LARGE_FILES=1
LIBEXEC_DIR = /usr/local/libexec
LIBOBJS = 
LIBRARY_EXTRA_CPPFLAGS = 
LIBRARY_PATH = /usr/local/lib/WizardsToolkit-1.0.9
LIBS = 
LIBSTDCLDFLAGS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool

# Automatically reconfigure libtool
LIBTOOL_DEPS = ./config//ltmain.sh
LIB_DIR = /usr/local/lib
LIB_DL = 
LIPO = 
LN_S = ln -s
LOCALSTATE_DIR = /usr/local/var
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LZMA_CFLAGS = 
LZMA_LIBS = -llzma
MAINT = #
MAKEINFO = ${SHELL} '/home/cristy/WizardsToolkit-1.0.9/config/missing' makeinfo
MANIFEST_TOOL = :
MAN_DIR = /usr/local/share/man
MATH_LIBS = -lm
MKDIR_P = /usr/bin/mkdir -p
MODULE_EXTRA_CPPFLAGS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OLDINCLUDE_DIR = /usr/include
OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = 
OTOOL = 
OTOOL64 = 
P7ZIP = 7za
PACKAGE = WizardsToolkit
PACKAGE_BASE_VERSION = 1.0.9
PACKAGE_BUGREPORT = https://github.com/ImageMagick/WizardsToolkit/issues
PACKAGE_LIB_VERSION = 0x109
PACKAGE_LIB_VERSION_NUMBER = 1,0,9,5
PACKAGE_NAME = WizardsToolkit
PACKAGE_PATCHLEVEL_VERSION = 5
PACKAGE_RELEASE_DATE = 2023-09-20
PACKAGE_STRING = WizardsToolkit 1.0.9-5
PACKAGE_TARNAME = WizardsToolkit
PACKAGE_URL = https://urban-warrior.org
PACKAGE_VERSION = 1.0.9-5
PACKAGE_VERSION_ADDENDUM = -5
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POW_LIB = 
PREFIX_DIR = /usr/local
PRTDIAG = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = g++
PTHREAD_LIBS = -lpthread
RANLIB = ranlib
RPM = rpmbuild
SBIN_DIR = /usr/local/sbin
SED = /usr/bin/sed
SET_MAKE = 
SHAREARCH_BASEDIRNAME = config
SHAREARCH_DIR = /usr/local/lib
SHAREARCH_DIRNAME = config-
SHAREARCH_PATH = /usr/local/lib/WizardsToolkit-1.0.9/config-
SHAREARCH_RELATIVE_PATH = config-
SHAREDSTATE_DIR = /usr/local/com
SHARE_PATH = /usr/local/share/WizardsToolkit-1
SHELL = /bin/sh
STRIP = strip
SYSCONF_DIR = /usr/local/etc
TAR = gtar
THREAD_LIBS = -lpthread
UINT16_T = unsigned short
UINT32_F = ""
UINT32_T = unsigned int
UINT64_F = "l"
UINT64_T = unsigned long
UINT8_T = unsigned char
UINTMAX_F = "l"
UINTMAX_T = unsigned long
UINTPTR_F = "l"
UINTPTR_T = unsigned long
UMEM_LIBS = 
VERSION = 1.0.9-5
WIZARD_CFLAGS =  -fopenmp -Wall -g -O2 -mtune=core2 -pthread -pthread
WIZARD_CONFIGURE_BUILD_PATH = /home/cristy/WizardsToolkit-1.0.9/config
WIZARD_CONFIGURE_SRC_PATH = /home/cristy/WizardsToolkit-1.0.9/config
WIZARD_CPPFLAGS = -I/usr/local/include/WizardsToolkit-1
WIZARD_DEP_LIBS =   -lbz2 -llzma -lz  -lm -lgomp   -lpthread
WIZARD_GIT_REVISION = 89f5983:20230920
WIZARD_LDFLAGS = -L/usr/local/lib 
WIZARD_LIBRARY_AGE = 0
WIZARD_LIBRARY_CURRENT = 1
WIZARD_LIBRARY_CURRENT_MIN = 1
WIZARD_LIBRARY_REVISION = 1
WIZARD_LIBRARY_VERSION_INFO = 1:1:0
WIZARD_LIBS = wizard/libWizardsToolkit.la
WIZARD_LIB_VERSION = 0x010001
WIZARD_LIB_VERSION_NUMBER = 1,0,1
WIZARD_LIB_VERSION_TEXT = 1.0.9
WIZARD_LT_RELEASE_OPTS = 
WIZARD_MAJOR_VERSION = 1
WIZARD_MICRO_VERSION = 9
WIZARD_MINOR_VERSION = 0
WIZARD_PATCHLEVEL_VERSION = 5
WIZARD_PCFLAGS = -fopenmp
WIZARD_TARGET_CPU = x86_64
WIZARD_TARGET_OS = linux-gnu
WIZARD_TARGET_VENDOR = pc
WIZARD_VERSION = 1.0.9-5
WinPathScript = /home/cristy/WizardsToolkit-1.0.9/winpath.sh
X_CFLAGS = 
ZIP = zip
ZLIB_CFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/cristy/WizardsToolkit-1.0.9
abs_srcdir = /home/cristy/WizardsToolkit-1.0.9
abs_top_builddir = /home/cristy/WizardsToolkit-1.0.9
abs_top_srcdir = /home/cristy/WizardsToolkit-1.0.9
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share

# Architecture independent data files installed in the package's data directory
docdir = $(DOCUMENTATION_PATH)
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/cristy/WizardsToolkit-1.0.9/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}

# Pkgconfig directory
pkgconfigdir = $(libdir)/pkgconfig
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = 
top_builddir = .
top_srcdir = .
windows_font_dir = 
topincludedir = ${prefix}/include/wizard
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
ACLOCAL_AMFLAGS = -I m4

# Options to pass when running configure in the distcheck target.
#
# We want to preserve user-provided option variables so the same
# compiler, headers, and libraries are used as for a normal build.
DISTCHECK_CONFIGURE_FLAGS = $(DISTCHECK_CONFIG_FLAGS)
DISTCLEANFILES = _configs.sed wizard/wizard-config.h
CLEANFILES = \
	$(BZIP_CLEANFILES) \
	$(ZIP_CLEANFILES) \
	$(TESTS_CLEANFILES) \
	$(UTILITIES_CLEANFILES)


# Binary scripts
bin_SCRIPTS = \
	$(WIZARD_BIN_SCRPTS) 

include_HEADERS = 

# Headers which are not installed but which are distributed
noinst_HEADERS = \
	$(BZIP_LIBS_NOINST_HDRS) \
	$(ZIP_LIBS_NOINST_HDRS) \
	$(WIZARD_NOINST_HDRS)

SRCDIR = "$(srcdir)/"
#SRCDIR = '$(shell /home/cristy/WizardsToolkit-1.0.9/winpath.sh $(srcdir)/)'

# Tests with .tap extensions use the TAP protocol and TAP driver
LOG_COMPILER = $(SHELL)
SH_LOG_COMPILER = $(LOG_COMPILER)
TAP_LOG_COMPILER = $(LOG_COMPILER)

# Test extensions
TEST_EXTENSIONS = .sh .tap
TAP_LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) \
	$(top_srcdir)/config/tap-driver.sh


# Environment parameters to be used during tests
TESTS_ENVIRONMENT = \
	MAKE="$(MAKE)" \
	MAKEFLAGS="$(MAKEFLAGS)" \
	MEMCHECK="$(MEMCHECK)"


# Tests to run
TESTS = \
	$(TESTS_TESTS) \
	$(UTILITIES_TESTS)

TOP_EXTRA_DIST = \
  AUTHORS.txt \
	README.txt \
	QuickStart.txt \
	ChangeLog.md \
	LICENSE \
	NOTICE \
	NEWS.txt \
	index.html \
	winpath.sh \
	wizard.sh.in


# Additional files to distribute
EXTRA_DIST = \
	$(TOP_EXTRA_DIST) \
	$(CONFIG_EXTRA_DIST) \
	$(WIZARD_EXTRA_DIST) \
	$(BZIP_EXTRA_DIST) \
	$(ZIP_EXTRA_DIST) \
	$(TESTS_EXTRA_DIST) \
	$(UTILITIES_EXTRA_DIST) 

lib_LTLIBRARIES = $(WIZARD_LIBS) $(BZIP_LIBS) $(ZIP_LIBS)
M4_EXTRA_DIST = \
	ac_func_fseeko.m4  \
	ax_append_flag.m4  \
	ax_c___attribute__.m4  \
	ax_cflags_warn_all.m4  \
	ax_compare_version.m4  \
	ax_cxx_bool.m4  \
	ax_cxx_namespaces.m4  \
	ax_cxx_namespace_std.m4  \
	ax_lang_compiler_ms.m4  \
	ax_opencl.m4  \
	ax_prefix_config_h.m4  \
	ax_prog_perl_version.m4  \
	ax_pthread.m4  \
	ax_require_defined.m4  \
	cxx_have_lstring.m4  \
	cxx_have_std_libs.m4  \
	framework.m4  \
	libtool.m4  \
	lt~obsolete.m4  \
	ltoptions.m4  \
	ltsugar.m4  \
	ltversion.m4  \
	magick_check_pthread_lib.m4  \
	pkg.m4  \
	version.m4  


# Where architecture-independent configuration files get installed
# (share/ImageMagick-version)
configsharedir = $(SHARE_PATH)
configshare_DATA = \
	config/configure.xml


# Where architecture-dependent configuration files get installed
# (share/arch/WizardsToolkit-version)
configsharearchdir = $(SHAREARCH_PATH)
configsharearch_DATA = \
  config/configure.xml 


# Where architecture-dependent configuration files get installed
# (lib/ImageMagick-version)
configlibdir = $(CONFIGURE_PATH)
configlib_DATA = \
	config/log.xml \
	config/mime.xml

CONFIG_EXTRA_DIST = \
  config/configure.xml \
  config/config.h.in \
  config/install-sh \
  config/log.xml \
  config/mime.c \
  config/mime.xml

wizardincdir = $(INCLUDE_PATH)/wizard

# Headers which are installed
wizardinc_HEADERS = \
	$(WIZARD_INCLUDE_HDRS)

WIZARD_BIN_SCRPTS = \
  wizard/WizardsToolkit-config

WIZARD_PKGCONFIG = \
  wizard/WizardsToolkit.pc

WIZARD_MANS = \
  wizard/WizardsToolkit-config.1

wizard_libWizardsToolkit_la_SOURCES = $(WIZARD_BASE_SRCS) $(WIZARD_PLATFORM_SRCS)
wizard_libWizardsToolkit_la_LIBADD = $(WIZARD_DEP_LIBS)
#wizard_libWizardsToolkit_la_LDFLAGS_VERSION = -export-symbols-regex ".*"
wizard_libWizardsToolkit_la_LDFLAGS_VERSION = -Wl,--version-script=$(top_srcdir)/wizard/libWizardsToolkit.map
wizard_libWizardsToolkit_la_LDFLAGS = -no-undefined \
  $(wizard_libWizardsToolkit_la_LDFLAGS_VERSION) \
  $(WIZARD_LT_RELEASE_OPTS) -version-info \
  $(WIZARD_LIBRARY_CURRENT):$(WIZARD_LIBRARY_REVISION):$(WIZARD_LIBRARY_AGE)


# Library base sources
WIZARD_BASE_SRCS = \
  wizard/aes.c \
  wizard/aes.h \
  wizard/authenticate.c \
  wizard/authenticate.h \
  wizard/blob.c \
  wizard/blob.h \
  wizard/blob-private.h \
  wizard/bzip.c \
  wizard/bzip.h \
  wizard/chacha.c \
  wizard/chacha.h \
  wizard/cipher.c \
  wizard/cipher.h \
  wizard/client.c \
  wizard/client.h \
  wizard/configure.c \
  wizard/configure.h \
  wizard/hashmap.h \
  wizard/crc64.c \
  wizard/crc64.h \
  wizard/entropy.c \
  wizard/entropy.h \
  wizard/exception.c \
  wizard/exception.h \
  wizard/exception-private.h \
  wizard/file.c \
  wizard/file.h \
  wizard/hash.c \
  wizard/hash.h \
  wizard/hashmap.c \
  wizard/hashmap.h \
  wizard/hmac.c \
  wizard/hmac.h \
  wizard/key.c \
  wizard/key.h \
  wizard/keyring.c \
  wizard/keyring.h \
  wizard/locale.c \
  wizard/locale_.h \
  wizard/log.c \
  wizard/log.h \
  wizard/lzma.c \
  wizard/lzma.h \
  wizard/magick.c \
  wizard/magick.h \
  wizard/md5.c \
  wizard/md5.h \
  wizard/memory.c \
  wizard/memory_.h \
  wizard/memory-private.h \
  wizard/method-attribute.h \
  wizard/mime.c \
  wizard/mime.h \
  wizard/mime-private.h \
  wizard/nt-base.h \
  wizard/option.c \
  wizard/option.h \
  wizard/passphrase.c \
  wizard/passphrase.h \
  wizard/option.h \
  wizard/random.c \
  wizard/random_.h \
  wizard/resource.c \
  wizard/resource_.h \
  wizard/sanitize.c \
  wizard/sanitize.h \
  wizard/secret.c \
  wizard/secret.h \
  wizard/semaphore.c \
  wizard/semaphore.h \
  wizard/semaphore-private.h \
  wizard/serpent.c \
  wizard/serpent.h \
  wizard/signature.c \
  wizard/signature.h \
  wizard/sha1.c \
  wizard/sha1.h \
  wizard/sha2224.c \
  wizard/sha2224.h \
  wizard/sha2256.c \
  wizard/sha2256.h \
  wizard/sha2384.c \
  wizard/sha2384.h \
  wizard/sha2512.c \
  wizard/sha2512.h \
  wizard/sha3.c \
  wizard/sha3.h \
  wizard/splay-tree.c \
  wizard/splay-tree.h \
  wizard/string.c \
  wizard/string_.h \
  wizard/string-private.h \
  wizard/studio.h \
  wizard/thread.c \
  wizard/thread_.h \
  wizard/thread-private.h \
  wizard/timer.c \
  wizard/timer.h \
  wizard/token.c \
  wizard/token.h \
  wizard/twofish.c \
  wizard/twofish.h \
  wizard/utility.c \
  wizard/utility.h \
  wizard/utility-private.h \
  wizard/version.c \
  wizard/version.h \
  wizard/wizard.c \
  wizard/wizard.h \
  wizard/wizard-type.h \
  wizard/wizard-config.h \
  wizard/WizardsToolkit.h \
  wizard/xml-tree.c \
  wizard/xml-tree.h \
  wizard/xml-tree-private.h \
  wizard/zip.c \
  wizard/zip.h 

WIZARD_PLATFORM_SRCS = 
#WIZARD_PLATFORM_SRCS = 
#WIZARD_PLATFORM_SRCS = \
#  wizard/nt-base.c \
#  wizard/nt-base.h

WIZARD_INCLUDE_HDRS = \
  wizard/authenticate.h \
  wizard/blob.h \
  wizard/bzip.h \
  wizard/cipher.h \
  wizard/client.h \
  wizard/configure.h \
  wizard/entropy.h \
  wizard/exception.h \
  wizard/file.h \
  wizard/hash.h \
  wizard/hashmap.h \
  wizard/hmac.h \
  wizard/key.h \
  wizard/keyring.h \
  wizard/locale_.h \
  wizard/log.h \
  wizard/lzma.h \
  wizard/magick.h \
  wizard/md5.c \
  wizard/md5.h \
  wizard/memory_.h \
  wizard/method-attribute.h \
  wizard/mime.h \
  wizard/option.h \
  wizard/passphrase.h \
  wizard/random_.h \
  wizard/resource_.h \
  wizard/sanitize.h \
  wizard/secret.h \
  wizard/semaphore.h \
  wizard/splay-tree.h \
  wizard/string_.h \
  wizard/thread_.h \
  wizard/timer.h \
  wizard/token.h \
  wizard/utility.h \
  wizard/version.h \
  wizard/wizard.h \
  wizard/wizard-type.h \
  wizard/wizard-config.h \
  wizard/WizardsToolkit.h \
  wizard/xml-tree.h\
  wizard/zip.h 

WIZARD_NOINST_HDRS = \
  wizard/aes.h \
  wizard/chacha.h \
  wizard/blob-private.h \
  wizard/crc64.h \
  wizard/exception-private.h \
  wizard/memory-private.h \
  wizard/mime-private.h \
  wizard/semaphore-private.h \
  wizard/serpent.h \
  wizard/sha1.h \
  wizard/sha2224.h \
  wizard/sha2256.h \
  wizard/sha2384.h \
  wizard/sha2512.h \
  wizard/sha3.h \
  wizard/string-private.h \
  wizard/studio.h \
  wizard/thread-private.h \
  wizard/twofish.h \
  wizard/utility-private.h \
  wizard/xml-tree-private.h

WIZARD_EXTRA_DIST = \
	wizard/libWizardsToolkit.map \
	wizard/WizardsToolkit-config.in \
	$(WIZARD_MANS) \
	wizard/WizardsToolkit.pc.in

TESTS_CHECK_PGRMS = \
	tests/validate

tests_validate_SOURCES = tests/validate.c tests/validate.h
tests_validate_CPPFLAGS = $(AM_CPPFLAGS)
tests_validate_LDADD = $(WIZARD_LIBS)
TESTS_XFAIL_TESTS = 
TESTS_TESTS = \
	tests/validate.tap

TESTS_EXTRA_DIST = \
	tests/common.shi \
	tests/passphrase.txt \
	$(TESTS_TESTS)

TESTS_CLEANFILES = 
UTILITIES_PGMS = \
	utilities/encipher \
	utilities/decipher \
	utilities/cipher-info \
	utilities/keyring \
	utilities/digest

utilities_encipher_LDADD = $(WIZARD_LIBS)
utilities_encipher_LDFLAGS = $(LDFLAGS)
utilities_encipher_SOURCES = \
  utilities/encipher.c \
  utilities/content.c \
  utilities/content.h \
  utilities/utility.c \
  utilities/utility_.h

utilities_decipher_LDADD = $(WIZARD_LIBS)
utilities_decipher_LDFLAGS = $(LDFLAGS)
utilities_decipher_SOURCES = \
  utilities/decipher.c \
  utilities/content.c \
  utilities/content.h \
  utilities/utility.c \
  utilities/utility_.h

utilities_cipher_info_LDADD = $(WIZARD_LIBS)
utilities_cipher_info_LDFLAGS = $(LDFLAGS)
utilities_cipher_info_SOURCES = \
  utilities/cipher-info.c \
  utilities/content.c \
  utilities/content.h \
  utilities/utility.c \
  utilities/utility_.h

utilities_keyring_LDADD = $(WIZARD_LIBS)
utilities_keyring_LDFLAGS = $(LDFLAGS)
utilities_keyring_SOURCES = \
  utilities/keyring.c \
  utilities/content.c \
  utilities/content.h \
  utilities/utility.c \
  utilities/utility_.h

utilities_digest_LDADD = $(WIZARD_LIBS)
utilities_digest_LDFLAGS = $(LDFLAGS)
utilities_digest_SOURCES = \
  utilities/digest.c \
  utilities/content.c \
  utilities/content.h \
  utilities/utility.c \
  utilities/utility_.h


# Tests to run
UTILITIES_TESTS = \
	utilities/tests/encipher.tap \
	utilities/tests/cipher-info.tap \
	utilities/tests/decipher.tap \
	utilities/tests/keyring.tap \
	utilities/tests/digest.tap

UTILITIES_MANS = \
	utilities/encipher.1 \
	utilities/decipher.1 \
	utilities/cipher-info.1 \
	utilities/keyring.1 \
	utilities/digest.1

UTILITIES_CONFIGURE = \
	utilities/encipher.1.in \
	utilities/decipher.1.in \
	utilities/cipher-info.1.in \
	utilities/keyring.1.in \
	utilities/digest.1.in

UTILITIES_EXTRA_DIST = \
	$(UTILITIES_TESTS) \
	utilities/tests/common.shi \
	utilities/tests/passphrase.txt \
	utilities/tests/README.txt

UTILITIES_CLEANFILES = \
	utilities/tests/*.cip \
	utilities/tests/*.rdf \
	utilities/tests/*.txt~ \
	utilities/tests/*.xdm


# Files to install in Pkgconfig directory
pkgconfig_DATA = \
	$(WIZARD_PKGCONFIG)


# Manual pages to install
man_MANS = \
	$(WIZARD_MANS) \
	$(UTILITIES_MANS)

doc_DATA = \
	LICENSE \
	ChangeLog.md \
	NEWS.txt

#MAINTAINER_TARGETS = wizard-version $(RST2HTML_TARGETS)

# Non-Automake subdirectories to distribute
DISTDIRS = images scripts windows www

#
# Additional install rules
#

# Install HTML files
pkgdocdir = $(DOCUMENTATION_PATH)
DOCDIRS = images www www/api www/api/WizardsToolkit
HTML_INSTALL_DATA_TARGETS = install-data-html

# Uninstall HTML files
HTML_UNINSTALL_DATA_TARGETS = uninstall-data-html

#
# RPM build support
#
DIST_ARCHIVE_SRPM = $(distdir)-1.src.rpm
RPMDIR = rpmbuild
RPMARCH = $(WIZARD_TARGET_CPU)
#DIST_ARCHIVE_RPM = 
DIST_ARCHIVE_RPM = \
	$(RPMDIR)/$(RPMARCH)/$(PACKAGE_NAME)-$(PACKAGE_VERSION)-$(PACKAGE_PATCHLEVEL_VERSION).$(RPMARCH).rpm \
	$(RPMDIR)/$(RPMARCH)/$(PACKAGE_NAME)-devel-$(PACKAGE_VERSION)-$(PACKAGE_PATCHLEVEL_VERSION).$(RPMARCH).rpm

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .sh .sh$(EXEEXT) .tap .tap$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/m4/Makefile.am $(srcdir)/config/Makefile.am $(srcdir)/wizard/Makefile.am $(srcdir)/tests/Makefile.am $(srcdir)/utilities/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/m4/Makefile.am $(srcdir)/config/Makefile.am $(srcdir)/wizard/Makefile.am $(srcdir)/tests/Makefile.am $(srcdir)/utilities/Makefile.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config/config.h: config/stamp-h1
	@test -f $@ || rm -f config/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) config/stamp-h1

config/stamp-h1: $(top_srcdir)/config/config.h.in $(top_builddir)/config.status
	@rm -f config/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config/config.h
$(top_srcdir)/config/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f config/stamp-h1
	touch $@

distclean-hdr:
	-rm -f config/config.h config/stamp-h1
common.shi: $(top_builddir)/config.status $(srcdir)/common.shi.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
config/configure.xml: $(top_builddir)/config.status $(top_srcdir)/config/configure.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
config/WizardsToolkit.dox: $(top_builddir)/config.status $(top_srcdir)/config/WizardsToolkit.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wizard.sh: $(top_builddir)/config.status $(srcdir)/wizard.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
utilities/cipher-info.1: $(top_builddir)/config.status $(top_srcdir)/utilities/cipher-info.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
utilities/decipher.1: $(top_builddir)/config.status $(top_srcdir)/utilities/decipher.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
utilities/digest.1: $(top_builddir)/config.status $(top_srcdir)/utilities/digest.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
utilities/encipher.1: $(top_builddir)/config.status $(top_srcdir)/utilities/encipher.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
utilities/keyring.1: $(top_builddir)/config.status $(top_srcdir)/utilities/keyring.1.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
windows/WizardsToolkit.bat: $(top_builddir)/config.status $(top_srcdir)/windows/WizardsToolkit.bat.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wizard/version.h: $(top_builddir)/config.status $(top_srcdir)/wizard/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wizard/WizardsToolkit-config: $(top_builddir)/config.status $(top_srcdir)/wizard/WizardsToolkit-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wizard/WizardsToolkit.pc: $(top_builddir)/config.status $(top_srcdir)/wizard/WizardsToolkit.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
WizardsToolkit.spec: $(top_builddir)/config.status $(srcdir)/WizardsToolkit.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
wizard/$(am__dirstamp):
	@$(MKDIR_P) wizard
	@: > wizard/$(am__dirstamp)
wizard/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wizard/$(DEPDIR)
	@: > wizard/$(DEPDIR)/$(am__dirstamp)
wizard/aes.lo: wizard/$(am__dirstamp) wizard/$(DEPDIR)/$(am__dirstamp)
wizard/authenticate.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/blob.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/bzip.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/chacha.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/cipher.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/client.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/configure.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/crc64.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/entropy.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/exception.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/file.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/hash.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/hashmap.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/hmac.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/key.lo: wizard/$(am__dirstamp) wizard/$(DEPDIR)/$(am__dirstamp)
wizard/keyring.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/locale.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/log.lo: wizard/$(am__dirstamp) wizard/$(DEPDIR)/$(am__dirstamp)
wizard/lzma.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/magick.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/md5.lo: wizard/$(am__dirstamp) wizard/$(DEPDIR)/$(am__dirstamp)
wizard/memory.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/mime.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/option.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/passphrase.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/random.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/resource.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sanitize.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/secret.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/semaphore.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/serpent.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/signature.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha1.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha2224.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha2256.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha2384.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha2512.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/sha3.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/splay-tree.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/string.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/thread.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/timer.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/token.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/twofish.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/utility.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/version.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/wizard.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/xml-tree.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)
wizard/zip.lo: wizard/$(am__dirstamp) wizard/$(DEPDIR)/$(am__dirstamp)
wizard/nt-base.lo: wizard/$(am__dirstamp) \
	wizard/$(DEPDIR)/$(am__dirstamp)

wizard/libWizardsToolkit.la: $(wizard_libWizardsToolkit_la_OBJECTS) $(wizard_libWizardsToolkit_la_DEPENDENCIES) $(EXTRA_wizard_libWizardsToolkit_la_DEPENDENCIES) wizard/$(am__dirstamp)
	$(AM_V_CCLD)$(wizard_libWizardsToolkit_la_LINK) -rpath $(libdir) $(wizard_libWizardsToolkit_la_OBJECTS) $(wizard_libWizardsToolkit_la_LIBADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/validate-validate.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/validate$(EXEEXT): $(tests_validate_OBJECTS) $(tests_validate_DEPENDENCIES) $(EXTRA_tests_validate_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/validate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_validate_OBJECTS) $(tests_validate_LDADD) $(LIBS)
utilities/$(am__dirstamp):
	@$(MKDIR_P) utilities
	@: > utilities/$(am__dirstamp)
utilities/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utilities/$(DEPDIR)
	@: > utilities/$(DEPDIR)/$(am__dirstamp)
utilities/cipher-info.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)
utilities/content.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)
utilities/utility.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)

utilities/cipher-info$(EXEEXT): $(utilities_cipher_info_OBJECTS) $(utilities_cipher_info_DEPENDENCIES) $(EXTRA_utilities_cipher_info_DEPENDENCIES) utilities/$(am__dirstamp)
	@rm -f utilities/cipher-info$(EXEEXT)
	$(AM_V_CCLD)$(utilities_cipher_info_LINK) $(utilities_cipher_info_OBJECTS) $(utilities_cipher_info_LDADD) $(LIBS)
utilities/decipher.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)

utilities/decipher$(EXEEXT): $(utilities_decipher_OBJECTS) $(utilities_decipher_DEPENDENCIES) $(EXTRA_utilities_decipher_DEPENDENCIES) utilities/$(am__dirstamp)
	@rm -f utilities/decipher$(EXEEXT)
	$(AM_V_CCLD)$(utilities_decipher_LINK) $(utilities_decipher_OBJECTS) $(utilities_decipher_LDADD) $(LIBS)
utilities/digest.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)

utilities/digest$(EXEEXT): $(utilities_digest_OBJECTS) $(utilities_digest_DEPENDENCIES) $(EXTRA_utilities_digest_DEPENDENCIES) utilities/$(am__dirstamp)
	@rm -f utilities/digest$(EXEEXT)
	$(AM_V_CCLD)$(utilities_digest_LINK) $(utilities_digest_OBJECTS) $(utilities_digest_LDADD) $(LIBS)
utilities/encipher.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)

utilities/encipher$(EXEEXT): $(utilities_encipher_OBJECTS) $(utilities_encipher_DEPENDENCIES) $(EXTRA_utilities_encipher_DEPENDENCIES) utilities/$(am__dirstamp)
	@rm -f utilities/encipher$(EXEEXT)
	$(AM_V_CCLD)$(utilities_encipher_LINK) $(utilities_encipher_OBJECTS) $(utilities_encipher_LDADD) $(LIBS)
utilities/keyring.$(OBJEXT): utilities/$(am__dirstamp) \
	utilities/$(DEPDIR)/$(am__dirstamp)

utilities/keyring$(EXEEXT): $(utilities_keyring_OBJECTS) $(utilities_keyring_DEPENDENCIES) $(EXTRA_utilities_keyring_DEPENDENCIES) utilities/$(am__dirstamp)
	@rm -f utilities/keyring$(EXEEXT)
	$(AM_V_CCLD)$(utilities_keyring_LINK) $(utilities_keyring_OBJECTS) $(utilities_keyring_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f tests/*.$(OBJEXT)
	-rm -f utilities/*.$(OBJEXT)
	-rm -f wizard/*.$(OBJEXT)
	-rm -f wizard/*.lo

distclean-compile:
	-rm -f *.tab.c

#include tests/$(DEPDIR)/validate-validate.Po # am--include-marker
#include utilities/$(DEPDIR)/cipher-info.Po # am--include-marker
#include utilities/$(DEPDIR)/content.Po # am--include-marker
#include utilities/$(DEPDIR)/decipher.Po # am--include-marker
#include utilities/$(DEPDIR)/digest.Po # am--include-marker
#include utilities/$(DEPDIR)/encipher.Po # am--include-marker
#include utilities/$(DEPDIR)/keyring.Po # am--include-marker
#include utilities/$(DEPDIR)/utility.Po # am--include-marker
#include wizard/$(DEPDIR)/aes.Plo # am--include-marker
#include wizard/$(DEPDIR)/authenticate.Plo # am--include-marker
#include wizard/$(DEPDIR)/blob.Plo # am--include-marker
#include wizard/$(DEPDIR)/bzip.Plo # am--include-marker
#include wizard/$(DEPDIR)/chacha.Plo # am--include-marker
#include wizard/$(DEPDIR)/cipher.Plo # am--include-marker
#include wizard/$(DEPDIR)/client.Plo # am--include-marker
#include wizard/$(DEPDIR)/configure.Plo # am--include-marker
#include wizard/$(DEPDIR)/crc64.Plo # am--include-marker
#include wizard/$(DEPDIR)/entropy.Plo # am--include-marker
#include wizard/$(DEPDIR)/exception.Plo # am--include-marker
#include wizard/$(DEPDIR)/file.Plo # am--include-marker
#include wizard/$(DEPDIR)/hash.Plo # am--include-marker
#include wizard/$(DEPDIR)/hashmap.Plo # am--include-marker
#include wizard/$(DEPDIR)/hmac.Plo # am--include-marker
#include wizard/$(DEPDIR)/key.Plo # am--include-marker
#include wizard/$(DEPDIR)/keyring.Plo # am--include-marker
#include wizard/$(DEPDIR)/locale.Plo # am--include-marker
#include wizard/$(DEPDIR)/log.Plo # am--include-marker
#include wizard/$(DEPDIR)/lzma.Plo # am--include-marker
#include wizard/$(DEPDIR)/magick.Plo # am--include-marker
#include wizard/$(DEPDIR)/md5.Plo # am--include-marker
#include wizard/$(DEPDIR)/memory.Plo # am--include-marker
#include wizard/$(DEPDIR)/mime.Plo # am--include-marker
#include wizard/$(DEPDIR)/nt-base.Plo # am--include-marker
#include wizard/$(DEPDIR)/option.Plo # am--include-marker
#include wizard/$(DEPDIR)/passphrase.Plo # am--include-marker
#include wizard/$(DEPDIR)/random.Plo # am--include-marker
#include wizard/$(DEPDIR)/resource.Plo # am--include-marker
#include wizard/$(DEPDIR)/sanitize.Plo # am--include-marker
#include wizard/$(DEPDIR)/secret.Plo # am--include-marker
#include wizard/$(DEPDIR)/semaphore.Plo # am--include-marker
#include wizard/$(DEPDIR)/serpent.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha1.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha2224.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha2256.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha2384.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha2512.Plo # am--include-marker
#include wizard/$(DEPDIR)/sha3.Plo # am--include-marker
#include wizard/$(DEPDIR)/signature.Plo # am--include-marker
#include wizard/$(DEPDIR)/splay-tree.Plo # am--include-marker
#include wizard/$(DEPDIR)/string.Plo # am--include-marker
#include wizard/$(DEPDIR)/thread.Plo # am--include-marker
#include wizard/$(DEPDIR)/timer.Plo # am--include-marker
#include wizard/$(DEPDIR)/token.Plo # am--include-marker
#include wizard/$(DEPDIR)/twofish.Plo # am--include-marker
#include wizard/$(DEPDIR)/utility.Plo # am--include-marker
#include wizard/$(DEPDIR)/version.Plo # am--include-marker
#include wizard/$(DEPDIR)/wizard.Plo # am--include-marker
#include wizard/$(DEPDIR)/xml-tree.Plo # am--include-marker
#include wizard/$(DEPDIR)/zip.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

tests/validate-validate.o: tests/validate.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_validate_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tests/validate-validate.o -MD -MP -MF tests/$(DEPDIR)/validate-validate.Tpo -c -o tests/validate-validate.o `test -f 'tests/validate.c' || echo '$(srcdir)/'`tests/validate.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/validate-validate.Tpo tests/$(DEPDIR)/validate-validate.Po
#	$(AM_V_CC)source='tests/validate.c' object='tests/validate-validate.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_validate_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tests/validate-validate.o `test -f 'tests/validate.c' || echo '$(srcdir)/'`tests/validate.c

tests/validate-validate.obj: tests/validate.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_validate_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tests/validate-validate.obj -MD -MP -MF tests/$(DEPDIR)/validate-validate.Tpo -c -o tests/validate-validate.obj `if test -f 'tests/validate.c'; then $(CYGPATH_W) 'tests/validate.c'; else $(CYGPATH_W) '$(srcdir)/tests/validate.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/validate-validate.Tpo tests/$(DEPDIR)/validate-validate.Po
#	$(AM_V_CC)source='tests/validate.c' object='tests/validate-validate.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tests_validate_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tests/validate-validate.obj `if test -f 'tests/validate.c'; then $(CYGPATH_W) 'tests/validate.c'; else $(CYGPATH_W) '$(srcdir)/tests/validate.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf tests/.libs tests/_libs
	-rm -rf utilities/.libs utilities/_libs
	-rm -rf wizard/.libs wizard/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-configlibDATA: $(configlib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(configlib_DATA)'; test -n "$(configlibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(configlibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(configlibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(configlibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(configlibdir)" || exit $$?; \
	done

uninstall-configlibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(configlib_DATA)'; test -n "$(configlibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(configlibdir)'; $(am__uninstall_files_from_dir)
install-configshareDATA: $(configshare_DATA)
	@$(NORMAL_INSTALL)
	@list='$(configshare_DATA)'; test -n "$(configsharedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(configsharedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(configsharedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(configsharedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(configsharedir)" || exit $$?; \
	done

uninstall-configshareDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(configshare_DATA)'; test -n "$(configsharedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(configsharedir)'; $(am__uninstall_files_from_dir)
install-configsharearchDATA: $(configsharearch_DATA)
	@$(NORMAL_INSTALL)
	@list='$(configsharearch_DATA)'; test -n "$(configsharearchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(configsharearchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(configsharearchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(configsharearchdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(configsharearchdir)" || exit $$?; \
	done

uninstall-configsharearchDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(configsharearch_DATA)'; test -n "$(configsharearchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(configsharearchdir)'; $(am__uninstall_files_from_dir)
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-wizardincHEADERS: $(wizardinc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(wizardinc_HEADERS)'; test -n "$(wizardincdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(wizardincdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(wizardincdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(wizardincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(wizardincdir)" || exit $$?; \
	done

uninstall-wizardincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(wizardinc_HEADERS)'; test -n "$(wizardincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(wizardincdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.sh$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
.tap.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TAP_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TAP_LOG_DRIVER_FLAGS) $(TAP_LOG_DRIVER_FLAGS) -- $(TAP_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.tap$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TAP_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TAP_LOG_DRIVER_FLAGS) $(TAP_LOG_DRIVER_FLAGS) -- $(TAP_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)
dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)
dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)
dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS) all-local
install-binPROGRAMS: install-libLTLIBRARIES

install-checkPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(configlibdir)" "$(DESTDIR)$(configsharedir)" "$(DESTDIR)$(configsharearchdir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(wizardincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f utilities/$(DEPDIR)/$(am__dirstamp)
	-rm -f utilities/$(am__dirstamp)
	-rm -f wizard/$(DEPDIR)/$(am__dirstamp)
	-rm -f wizard/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f tests/$(DEPDIR)/validate-validate.Po
	-rm -f utilities/$(DEPDIR)/cipher-info.Po
	-rm -f utilities/$(DEPDIR)/content.Po
	-rm -f utilities/$(DEPDIR)/decipher.Po
	-rm -f utilities/$(DEPDIR)/digest.Po
	-rm -f utilities/$(DEPDIR)/encipher.Po
	-rm -f utilities/$(DEPDIR)/keyring.Po
	-rm -f utilities/$(DEPDIR)/utility.Po
	-rm -f wizard/$(DEPDIR)/aes.Plo
	-rm -f wizard/$(DEPDIR)/authenticate.Plo
	-rm -f wizard/$(DEPDIR)/blob.Plo
	-rm -f wizard/$(DEPDIR)/bzip.Plo
	-rm -f wizard/$(DEPDIR)/chacha.Plo
	-rm -f wizard/$(DEPDIR)/cipher.Plo
	-rm -f wizard/$(DEPDIR)/client.Plo
	-rm -f wizard/$(DEPDIR)/configure.Plo
	-rm -f wizard/$(DEPDIR)/crc64.Plo
	-rm -f wizard/$(DEPDIR)/entropy.Plo
	-rm -f wizard/$(DEPDIR)/exception.Plo
	-rm -f wizard/$(DEPDIR)/file.Plo
	-rm -f wizard/$(DEPDIR)/hash.Plo
	-rm -f wizard/$(DEPDIR)/hashmap.Plo
	-rm -f wizard/$(DEPDIR)/hmac.Plo
	-rm -f wizard/$(DEPDIR)/key.Plo
	-rm -f wizard/$(DEPDIR)/keyring.Plo
	-rm -f wizard/$(DEPDIR)/locale.Plo
	-rm -f wizard/$(DEPDIR)/log.Plo
	-rm -f wizard/$(DEPDIR)/lzma.Plo
	-rm -f wizard/$(DEPDIR)/magick.Plo
	-rm -f wizard/$(DEPDIR)/md5.Plo
	-rm -f wizard/$(DEPDIR)/memory.Plo
	-rm -f wizard/$(DEPDIR)/mime.Plo
	-rm -f wizard/$(DEPDIR)/nt-base.Plo
	-rm -f wizard/$(DEPDIR)/option.Plo
	-rm -f wizard/$(DEPDIR)/passphrase.Plo
	-rm -f wizard/$(DEPDIR)/random.Plo
	-rm -f wizard/$(DEPDIR)/resource.Plo
	-rm -f wizard/$(DEPDIR)/sanitize.Plo
	-rm -f wizard/$(DEPDIR)/secret.Plo
	-rm -f wizard/$(DEPDIR)/semaphore.Plo
	-rm -f wizard/$(DEPDIR)/serpent.Plo
	-rm -f wizard/$(DEPDIR)/sha1.Plo
	-rm -f wizard/$(DEPDIR)/sha2224.Plo
	-rm -f wizard/$(DEPDIR)/sha2256.Plo
	-rm -f wizard/$(DEPDIR)/sha2384.Plo
	-rm -f wizard/$(DEPDIR)/sha2512.Plo
	-rm -f wizard/$(DEPDIR)/sha3.Plo
	-rm -f wizard/$(DEPDIR)/signature.Plo
	-rm -f wizard/$(DEPDIR)/splay-tree.Plo
	-rm -f wizard/$(DEPDIR)/string.Plo
	-rm -f wizard/$(DEPDIR)/thread.Plo
	-rm -f wizard/$(DEPDIR)/timer.Plo
	-rm -f wizard/$(DEPDIR)/token.Plo
	-rm -f wizard/$(DEPDIR)/twofish.Plo
	-rm -f wizard/$(DEPDIR)/utility.Plo
	-rm -f wizard/$(DEPDIR)/version.Plo
	-rm -f wizard/$(DEPDIR)/wizard.Plo
	-rm -f wizard/$(DEPDIR)/xml-tree.Plo
	-rm -f wizard/$(DEPDIR)/zip.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am: html-local

info: info-am

info-am:

install-data-am: install-configlibDATA install-configshareDATA \
	install-configsharearchDATA install-data-local install-docDATA \
	install-includeHEADERS install-man install-pkgconfigDATA \
	install-wizardincHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-exec-local install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f tests/$(DEPDIR)/validate-validate.Po
	-rm -f utilities/$(DEPDIR)/cipher-info.Po
	-rm -f utilities/$(DEPDIR)/content.Po
	-rm -f utilities/$(DEPDIR)/decipher.Po
	-rm -f utilities/$(DEPDIR)/digest.Po
	-rm -f utilities/$(DEPDIR)/encipher.Po
	-rm -f utilities/$(DEPDIR)/keyring.Po
	-rm -f utilities/$(DEPDIR)/utility.Po
	-rm -f wizard/$(DEPDIR)/aes.Plo
	-rm -f wizard/$(DEPDIR)/authenticate.Plo
	-rm -f wizard/$(DEPDIR)/blob.Plo
	-rm -f wizard/$(DEPDIR)/bzip.Plo
	-rm -f wizard/$(DEPDIR)/chacha.Plo
	-rm -f wizard/$(DEPDIR)/cipher.Plo
	-rm -f wizard/$(DEPDIR)/client.Plo
	-rm -f wizard/$(DEPDIR)/configure.Plo
	-rm -f wizard/$(DEPDIR)/crc64.Plo
	-rm -f wizard/$(DEPDIR)/entropy.Plo
	-rm -f wizard/$(DEPDIR)/exception.Plo
	-rm -f wizard/$(DEPDIR)/file.Plo
	-rm -f wizard/$(DEPDIR)/hash.Plo
	-rm -f wizard/$(DEPDIR)/hashmap.Plo
	-rm -f wizard/$(DEPDIR)/hmac.Plo
	-rm -f wizard/$(DEPDIR)/key.Plo
	-rm -f wizard/$(DEPDIR)/keyring.Plo
	-rm -f wizard/$(DEPDIR)/locale.Plo
	-rm -f wizard/$(DEPDIR)/log.Plo
	-rm -f wizard/$(DEPDIR)/lzma.Plo
	-rm -f wizard/$(DEPDIR)/magick.Plo
	-rm -f wizard/$(DEPDIR)/md5.Plo
	-rm -f wizard/$(DEPDIR)/memory.Plo
	-rm -f wizard/$(DEPDIR)/mime.Plo
	-rm -f wizard/$(DEPDIR)/nt-base.Plo
	-rm -f wizard/$(DEPDIR)/option.Plo
	-rm -f wizard/$(DEPDIR)/passphrase.Plo
	-rm -f wizard/$(DEPDIR)/random.Plo
	-rm -f wizard/$(DEPDIR)/resource.Plo
	-rm -f wizard/$(DEPDIR)/sanitize.Plo
	-rm -f wizard/$(DEPDIR)/secret.Plo
	-rm -f wizard/$(DEPDIR)/semaphore.Plo
	-rm -f wizard/$(DEPDIR)/serpent.Plo
	-rm -f wizard/$(DEPDIR)/sha1.Plo
	-rm -f wizard/$(DEPDIR)/sha2224.Plo
	-rm -f wizard/$(DEPDIR)/sha2256.Plo
	-rm -f wizard/$(DEPDIR)/sha2384.Plo
	-rm -f wizard/$(DEPDIR)/sha2512.Plo
	-rm -f wizard/$(DEPDIR)/sha3.Plo
	-rm -f wizard/$(DEPDIR)/signature.Plo
	-rm -f wizard/$(DEPDIR)/splay-tree.Plo
	-rm -f wizard/$(DEPDIR)/string.Plo
	-rm -f wizard/$(DEPDIR)/thread.Plo
	-rm -f wizard/$(DEPDIR)/timer.Plo
	-rm -f wizard/$(DEPDIR)/token.Plo
	-rm -f wizard/$(DEPDIR)/twofish.Plo
	-rm -f wizard/$(DEPDIR)/utility.Plo
	-rm -f wizard/$(DEPDIR)/version.Plo
	-rm -f wizard/$(DEPDIR)/wizard.Plo
	-rm -f wizard/$(DEPDIR)/xml-tree.Plo
	-rm -f wizard/$(DEPDIR)/zip.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-configlibDATA uninstall-configshareDATA \
	uninstall-configsharearchDATA uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-man uninstall-pkgconfigDATA \
	uninstall-wizardincHEADERS

uninstall-man: uninstall-man1

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles am--refresh \
	check check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip dist-zstd distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am html-local info \
	info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-configlibDATA \
	install-configshareDATA install-configsharearchDATA \
	install-data install-data-am install-data-local \
	install-docDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-man1 install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip \
	install-wizardincHEADERS installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-configlibDATA uninstall-configshareDATA \
	uninstall-configsharearchDATA uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-local uninstall-man uninstall-man1 \
	uninstall-pkgconfigDATA uninstall-wizardincHEADERS

.PRECIOUS: Makefile


all-local: $(BZIP_LOCAL_TARGETS) $(ZIP_LOCAL_TARGETS) $(MAINTAINER_TARGETS)

install-exec-local:

install-data-local: $(HTML_INSTALL_DATA_TARGETS)

uninstall-local: $(HTML_UNINSTALL_DATA_TARGETS)

clean-local: 

distclean-local: 

maintainer-clean-local: 

check-local: 

# drd: valgrind's newer thread error detector
drd:
	$(MAKE) MEMCHECK='valgrind --tool=drd --check-stack-var=yes --var-info=yes \
	  --quiet $(VALGRIND_EXTRA_OPTS)' check

# helgrind: valgrind's older thread error detector
helgrind:
	$(MAKE) MEMCHECK='valgrind --tool=helgrind --error-exitcode=2 --quiet \
	$(VALGRIND_EXTRA_OPTS)' check

# memcheck: valgrind's memory access checker
memcheck:
	$(MAKE) MEMCHECK='valgrind --tool=memcheck --leak-check=full --read-var-info=yes \
	--error-exitcode=2 --track-origins=yes --num-callers=12 \
	--quiet $(VALGRIND_EXTRA_OPTS)' check

# ptrcheck: valgrind's experimental pointer checking tool.
ptrcheck:
	$(MAKE) MEMCHECK='valgrind --tool=exp-ptrcheck --quiet $(VALGRIND_EXTRA_OPTS)' check
dist-hook:
	( \
	  builddir=`pwd` ; \
	  cd $(srcdir) && \
	  ( \
	    for dir in $(DISTDIRS) ; do \
	      find $$dir -depth -print | egrep -v '(~$$)|(/CVS)|(/\.#)|(/\.deps)|(/\.svn)' \
	        | cpio -pdum $$builddir/$(distdir) 2> /dev/null ; \
	    done \
	  ) \
	)
install-data-html:
	$(mkinstalldirs) $(DESTDIR)$(pkgdocdir)
	$(INSTALL_DATA) $(srcdir)/index.html $(DESTDIR)$(pkgdocdir)
	@for dir in $(DOCDIRS) ; do \
	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
	  for file in $(srcdir)/$$dir/*.* ; do \
	    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
	    $(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
	  done ; \
	done
uninstall-data-html:
	rm -f $(DESTDIR)$(pkgdocdir)/index.html
	for dir in $(DOCDIRS) ; do \
	  rm -f -r $(DESTDIR)$(pkgdocdir)/$$dir ; \
	done

# Ensure that version.h at $(srcdir)/wizard/version.h is kept up to date.
wizard-version: wizard/version.h
	@if test -f "$(srcdir)/windows/installer/scripts/version.isx.in" ; then \
	  ./config.status --file="$(srcdir)/windows/installer/scripts/version.isx" 2> /dev/null ; \
	fi
	@if test -n "$(VPATH)" ; then \
	  cmp wizard/version.h $(srcdir)/wizard/version.h > /dev/null ; \
          if test $$? -eq 1 ; then \
	    echo "Updating $(srcdir)/wizard/version.h ..."; \
	    cp wizard/version.h $(srcdir)/wizard/version.h ; \
	  fi ; \
	fi ; \
	touch wizard-version

wizard/version.h: $(top_srcdir)/ChangeLog.md $(top_srcdir)/m4/version.m4
libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

# Format C API documentation
html-local:
	doxygen config/WizardsToolkit.dox
.PHONY: srpm
$(DIST_ARCHIVE_SRPM) srpm: dist
	rm -f $(DIST_ARCHIVE_SRPM)
	$(RPM) --define="_sourcedir `pwd`" --define="_srcrpmdir `pwd`" --nodeps --bs WizardsToolkit.spec
	@echo ==============================================================
	@echo $(DIST_ARCHIVE_SRPM) is ready for distribution.
	@echo ==============================================================

.PHONY: rpm
rpm: dist
	rm -rf $(RPMDIR)
	$(mkinstalldirs) $(RPMDIR)
	$(mkinstalldirs) $(RPMDIR)/BUILD
	$(mkinstalldirs) $(RPMDIR)/RPMS
	$(RPM) --define="_sourcedir `pwd`" --define="_rpmdir `pwd`/$(RPMDIR)/RPMS" --define="_builddir `pwd`/$(RPMDIR)/BUILD" --nodeps -bb WizardsToolkit.spec
	@echo ==============================================================
	@echo $(DIST_ARCHIVE_RPM) is ready for distribution.
	@echo ==============================================================

#
# Build a validated snapshot release and move to the snapshots directory.
#
snapshot: distcheck
	$(MAKE) $(DIST_ARCHIVE_SRPM)
	$(MAKE) $(DIST_WINDOWS_SRC_ZIP)
	mv -f $(DIST_ARCHIVES) $(DIST_WINDOWS_SRC_ZIP) $(DIST_ARCHIVE_SRPM) /var/ftp/pub/WizardsToolkit/beta/

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
